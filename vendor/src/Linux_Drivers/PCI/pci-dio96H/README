
                      PCI-DIO-96H Version 1.9
                      ----------------------

 Linux loadable module for the Measurement Computing PCI-DIO-96H 
 ------------------------------------------------------------------------

NOTE:  kernel 2.4 driver is called:    dio96H_2_4.c
       kernel 2.6.20  driver is called: dio96H_2_6_20.c  (For Red Hat EL 5 old kernel)
       kernel 2.6.26  driver is called: dio96H_2_6_26.c  (Newer Fedora Core 6 type kernels)
       kernel 2.6.29  driver is called: dio96H_2_6_29.c
       kernel 3.3.7   driver is called: dio96H_3_3_7.c 
       kernel 3.10.11 driver is called: dio96H_3_10_11.c
       kernel 4.0.8   driver is called: dio96H_4_0_8.c

Introduction:
-------------
This driver was written by Warren J. Jasper at North Carolina State
University.  It is a driver for the Measurement Computing PCI-DIO-96H
adapter.  

Please send comments and bug fixes to wjasper@tx.ncsu.edu.  The source for the
driver is located at https://github.com/wjasper/Linux_Drivers


Distribution contents:
----------------------
README               - this file
Makefile             - Makefile to compile and install the driver
dio96H.c             - PCI-DIO-96H Driver source.
dio96H_2_4.c         - PCI-DIO-96H Driver source 2.4 Kernel
dio96H_2_6_20.c      - PCI-DIO-96H Driver source 2.6 Kernel
dio96H_2_6_26.c      - PCI-DIO-96H Driver source 2.6 Kernel
dio96H_2_6_29.c      - PCI-DIO-96H Driver source 2.6.29 Kernel
dio96H_3_3_7.c       - PCI-DIO-96H Driver source 3.3.7 Kernel
dio96H_3_10_11.c     - PCI-DIO-96H Driver source 3.10.11 Kernel
dio96H_4_0_8.c       - PCI-DIO-96H Driver source 4.0.8  Kernel
dio96H.h             - Driver definitions and constants.
pci-dio96h.H         - User and driver definitions and constants.
test-dio96H.c        - Test program.
pci-dio96h.pdf       - Users Manual
RegMapPCI-DIO96H.pdf - Register Map documentation
PCIe-DIO96H.pdf      - Register Map for the PCIe-DIO96H

Building and installing the driver:
-----------------------------------

1. Untar the tar file:

   tar zxvf PCI-DIO96H.1.9.tgz

2. This should create the following files:
    README  
    Makefile
    dio96H.c
    dio96H_2_4.c
    dio96H_2_6_20.c
    dio96H_2_6_26.c
    dio96H_2_6_29.c
    dio96H_3_3_7.c
    dio96H_3_10_11.c
    dio96H_4_0_8.c
    dio96H.h
    pci-dio96H.h	
    test-dio96H.c
    pci-dio96h.pdf
    RegMapPCI-DIO96H.pdf
    PCIe-DIO96H.pdf

3. The default configuration is for the kernel to dynamically set the
   major number.  If you wish to override this option and force a particular
   major number, set the following in dio96H.h

   #define DEFAULT_MAJOR_DEV  0    /* Default Major Device Number */

4. To compile, type:

   make

5. To install the driver type:

    make install

    check that the destination directory is correct.

6. Copy the file 61-mcc.rules to /etc/udev/rules.d,
   (or 60-mcc.rules for the older 2.6 kernel).  These files can be found
   at ftp://lx10.tx.ncsu.edu/pub/Linux/drivers

   or inlcude the following rule:

#Enable non-root access to pci devices
SUBSYSTEM=="dio96H", KERNEL=="dio[0-9]_*",    NAME="dio96H/%k", MODE="666"

To test your updated rules you can do one of the following:
1.    /sbin/udevadm control --reload  (or something similar.  type man udevadm)
2.    Reboot your system

You will be able to search the attributes of the device by
   /sbin/udevadm info -a -p $(/sbin/udevadm info -q path -n /dev/dio96H/dio0_0A)


Having the driver install at boot:  (2.4 kernel only)
----------------------------------
There are 2 ways to do this:


1) To install the driver so that it comes up every time on boot-up, you
  will need to include the following lines in one of your boot rc files.
  The one we used is called /etc/rc.d/rc.local. Your setup may vary.

#! /bin/sh
#
# rc.local	This does local customization.
#
# Author:	Warren Jasper <wjasper@tx.ncsu.edu>
#
echo -n "Local customization:"

if [ -x /sbin/insmod -a -r /lib/modules/`uname -r`/kernel/drivers/char/pci-dio96H.o ]; then
    echo -n " PCI-DIO96H"
    /sbin/insmod -f /lib/modules/`uname -r`/kernel/drivers/char/pci-dio96H.o
fi

2)  add the following line to your /etc/modules.conf

        alias char-major-254 pci-dio96H


How the driver works:
---------------------

The driver is fairly straight forward, but since the current version of
Linux is not 1003.4 compliant (it is not a real-time operating system),
certain design decisions were made in writing this driver. 

All the devices nodes are automagically created for you by /sysfs and udev. They are

/dev/dio96H/dio[Board Number]_[Port Number][A-C]

so

/dev/dio96H/dio0_2B would be Board 0, Port 2, Port C.  Type

	ls -l /dev/dio96H
 
to list all the devie nodes.  The dio96 has 4 sets of ports [0-3],
and each set has 3 ports A, B, and C.  See the documentaion on the 8255.


****************************************************************************

The following ioctl() functions have been implemented:

1. ioctl(fd, DIO_SET_DIRECTION, PORT_INPUT);
   Set the direction of the port to either input or output.  Port C
   can be split into two levels (4 bits each), while ports A and B are
   either all input or all output.

